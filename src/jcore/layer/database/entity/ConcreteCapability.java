package layer.database.entity;

// Generated 22-nov-2016 14.40.56 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ConcreteCapability generated by hbm2java
 */
@Entity
@Table(name = "concrete_capability", catalog = "musa_db")
public class ConcreteCapability implements java.io.Serializable {

	private Integer idConcreteCapability;
	private AbstractCapability abstractCapability;
	private byte[] fileUpload;
	private String provider;
	private String id;
	private Set<CapabilityInstance> capabilityInstances = new HashSet<CapabilityInstance>(
			0);

	public ConcreteCapability() {
	}

	public ConcreteCapability(AbstractCapability abstractCapability,
			byte[] fileUpload, String provider, String id,
			Set<CapabilityInstance> capabilityInstances) {
		this.abstractCapability = abstractCapability;
		this.fileUpload = fileUpload;
		this.provider = provider;
		this.id = id;
		this.capabilityInstances = capabilityInstances;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idConcrete_Capability", unique = true, nullable = false)
	public Integer getIdConcreteCapability() {
		return this.idConcreteCapability;
	}

	public void setIdConcreteCapability(Integer idConcreteCapability) {
		this.idConcreteCapability = idConcreteCapability;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idAbstract_Capability")
	public AbstractCapability getAbstractCapability() {
		return this.abstractCapability;
	}

	public void setAbstractCapability(AbstractCapability abstractCapability) {
		this.abstractCapability = abstractCapability;
	}

	@Column(name = "fileUpload")
	public byte[] getFileUpload() {
		return this.fileUpload;
	}

	public void setFileUpload(byte[] fileUpload) {
		this.fileUpload = fileUpload;
	}

	@Column(name = "Provider", length = 45)
	public String getProvider() {
		return this.provider;
	}

	public void setProvider(String provider) {
		this.provider = provider;
	}

	@Column(name = "id", length = 45)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "concreteCapability")
	public Set<CapabilityInstance> getCapabilityInstances() {
		return this.capabilityInstances;
	}

	public void setCapabilityInstances(
			Set<CapabilityInstance> capabilityInstances) {
		this.capabilityInstances = capabilityInstances;
	}

}
