<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="usage" name="JaCaMo">

    <property environment="env" />

    <property name="build.dir"         value="${basedir}/bin/classes" />

    <property name="dist.properties" value="${basedir}/bin/dist.properties" />
    <property name="version"           value="0" />
    <property name="release"           value="5" />
    <property name="dist.dir"          value="${basedir}/dist" />
    <property name="dist.file"         value="${dist.dir}/jacamo-${version}.${release}" />
    <property name="house-example.dir" value="${basedir}/examples/house-building" />

    <property name="jason.dir"   value="../jason/jason-svn" />
    <property name="moise.dir"   value="../moise/moise-svn" />
    <property name="cartago.dir" value="../cartago-svn/dist/cartago-2.0.2" />
    <property name="intmas.dir"  value="../intmas" />

    <path id="project.classpath">
        <pathelement location="${basedir}/lib/jason.jar" />
        <pathelement location="${basedir}/lib/cartago.jar" />
        <pathelement location="${basedir}/lib/c4jason.jar" />
        <pathelement location="${basedir}/lib/moise.jar" />
        <pathelement location="${basedir}/lib/junit.jar" />
    </path>


    <target name="usage">
        <echo>
TARGETS:
    compile     -- compiles the source files
    jar         -- generates jacamo.jar
    dist        -- genetares the distribution file
    easss2010   -- produces the zip file for the example used @ EASSS 2010
    build-house -- produces the zip file for the latest version of the building house example
        </echo>
    </target>

    <target name="init" >
        <mkdir dir="${build.dir}" />
    </target>

	
    <condition property="parsers-ok" value="ok">
        <and>
            <uptodate property="parsers-ok" targetfile="${basedir}/src/jacamo/project/parser/JaCaMoProjectParser.java" srcfile="${basedir}/src/jacamo/project/parser/JaCaMoProjectParser.jcc" />
        </and>
    </condition>

    <target name="parsers" depends="init" unless="parsers-ok">
        <delete failonerror="no">
            <fileset dir="${basedir}/src/jacamo/project/parser" includes="*.java" />
        </delete>

        <java dir="${basedir}/src/jacamo/project/parser" classname="javacc" fork="yes">
            <classpath location="${basedir}/lib/javacc.jar" />
            <arg line="JaCaMoProjectParser.jcc" />
        </java>

        <java dir="${basedir}/src/jacamo/project/parser" classname="jjdoc" fork="yes">
            <classpath location="${basedir}/lib/javacc.jar" />
            <arg line="JaCaMoProjectParser.jcc" />
        </java>
        <move file="${basedir}/src/jacamo/project/parser/JaCaMoProjectParser.html" todir="${basedir}/doc" />

    </target>

    <target name="compile" depends="init,parsers">
        <javac srcdir="src" destdir="${build.dir}" debug="true" deprecation="true" optimize="true" nowarn="true" source="1.6" target="1.6" includeantruntime="false">
            <classpath refid="project.classpath" />
        </javac>
    </target>


    <target name="jar" depends="compile">
        <propertyfile file="${dist.properties}">
            <entry key="version" value="${version}" />
            <entry key="release" value="${release}" />
            <!-- entry default="0" key="build" operation="+" type="int" /-->
            <entry key="build.date" type="date" value="now" />
        </propertyfile>
        <property file="${dist.properties}" />
    	
        <jar jarfile="${basedir}/lib/jacamo.jar" >
            <fileset dir="${build.dir}">
                <include name="jacamo/**/*.class" />
            </fileset>
        	<fileset dir="${basedir}/bin">
                <include name="dist.properties" />
            </fileset>
            <fileset dir="${basedir}/src">
                <include name="templates/*" />
            </fileset>
        	<zipfileset includes="**/Config.class,**/*Factory.class" src="lib/jason.jar"/>
            <manifest>
                  <attribute name="Main-Class" value="jacamo.util.ConfigGUI"/>
            </manifest>
        </jar>
    </target>

	
    <!-- distribution related tasks -->
    
    <target name="dist" description="Prepare for distribution." depends="clean,jar">
        <fixcrlf eol="crlf" includes="**/*.txt,**/*.bat" srcdir="${basedir}" />
        <fixcrlf tab="remove" tablength="4" javafiles="true" includes="**/*.java,**/*.xml" srcdir="${house-example.dir}/src" />
        <mkdir dir="${dist.dir}" />    

    	<echo message="Generating JaCaMo ${version}.${release}" />

        <delete dir="${dist.dir}/jacamo" />
        <mkdir dir="${dist.dir}/jacamo" />

        <copy todir="${dist.dir}/jacamo">
            <fileset dir="${basedir}" includes="*.*" />
            <fileset dir="${basedir}" includes="LICENSE" />
            <fileset dir="${basedir}" includes="README" />

            <fileset dir="${basedir}" includes="bin/*.*" />
            <fileset dir="${basedir}" includes="doc/**/*" />
            <fileset dir="${basedir}" includes="examples/house-building/**/*" />
            <fileset dir="${basedir}" includes="examples/writing-paper/**/*" />
            <fileset dir="${basedir}" includes="examples/auction/**/*" />
            <fileset dir="${basedir}" includes="demos/**/*" />
            <fileset dir="${basedir}" includes="lib/**/*" />
            <fileset dir="${basedir}" includes="src/**/*" />
        </copy>
    	<delete dir="${dist.dir}/jacamo/examples/house-building/bin" />
        <delete dir="${dist.dir}/jacamo/demos/distribution1/bin" />

    	<copy todir="${dist.dir}/jacamo/doc/jason">
    	    <fileset dir="${jason.dir}/doc" includes="**/*" />
    	</copy>
        <delete dir="${dist.dir}/jacamo/doc/jason/faq" />
        <delete dir="${dist.dir}/jacamo/doc/jason/mini-tutorial/src" />
    	
    	<copy todir="${dist.dir}/jacamo/doc/moise">
            <fileset dir="${moise.dir}/doc" includes="**/*" />        	
            <!--fileset dir="${moise.dir}/doc/specification" includes="*.pdf" />
            <fileset dir="${moise.dir}/doc/tutorial"      includes="*.pdf" /-->
        </copy>
        <delete dir="${dist.dir}/jacamo/doc/moise/tutorial" excludes="**/*.pdf"/>
        <delete dir="${dist.dir}/jacamo/doc/moise/specification" excludes="**/*.pdf"/>
        <!--delete dir="${dist.dir}/jacamo/doc/moise/specification" /-->
        <!--delete dir="${dist.dir}/jacamo/doc/moise/tutorial" /-->
    	
        <copy todir="${dist.dir}/jacamo/doc/cartago">
            <fileset dir="${cartago.dir}/doc" includes="**/*" />        	
        </copy>
    	
        <copy todir="${dist.dir}/jacamo/doc/int-mas">
            <fileset dir="${intmas.dir}/doc" includes="**/*" />            
        </copy>

    	<zip basedir="${dist.dir}/jacamo" includes="**/*" zipfile="${dist.file}.zip"/>        
    </target>
	
	
	<target name="easss2010" depends="dist,clean">
        <echo message="Generating EASSS 2010 zip file" />
	    <property name="file.name" value="easss2010-house-building" />
		<delete dir="${dist.dir}/${file.name}" />
		<copy todir="${dist.dir}/${file.name}">
            <fileset dir="${house-example.dir}" includes="*.*" />
            <fileset dir="${house-example.dir}" includes="lib/*.jar" />
            <fileset dir="${house-example.dir}" includes="src/**/*" />
        </copy>
		
		<zip basedir="${dist.dir}" destfile="${dist.dir}/${file.name}.zip" includes="${file.name}/**" />
	</target>
	
    <target name="build-house" depends="dist,clean">
        <echo message="Generating build house example 2012 zip file" />
        <property name="file.name" value="build-house-0.3" />
        <delete dir="${dist.dir}/${file.name}" />
        <copy todir="${dist.dir}/${file.name}">
            <fileset dir="${house-example.dir}" includes="*.*" />
            <fileset dir="${house-example.dir}" includes="lib/*.jar" />
            <fileset dir="${house-example.dir}" includes="src/**/*" />
            <fileset dir="${house-example.dir}" includes="doc/**/*.pdf" />
        </copy>
        
        <zip basedir="${dist.dir}" destfile="${dist.dir}/${file.name}.zip" includes="${file.name}/**" />
    </target>

	<target name="clean">
        <delete failonerror="no" includeEmptyDirs="true" verbose="true">
            <fileset defaultexcludes="no" dir="${basedir}" includes="**/*~" />
            <fileset dir="${basedir}" includes="bin/**/*.class" />
            <fileset dir="${basedir}" includes="examples/**/*.log" />
            <fileset dir="${basedir}" includes="demos/**/*.log" />
            <fileset dir="${basedir}" includes="**/svn-commit*" />
        </delete>
    </target>

</project>
